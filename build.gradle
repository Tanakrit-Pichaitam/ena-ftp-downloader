group 'uk.ac.ebi.ena'
version 'v1.1'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = "uk.ac.ebi.ena.ftp.gui.Main"

repositories {
    mavenCentral()
    flatDir {
        dirs 'lib'
    }
}

run {
//    jvmArgs = ["-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"]
}
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

task copyToLib(type: Copy) {
    into "$buildDir/output/lib"
    from configurations.runtime
}

jar {
    dependsOn configurations.compile
    from {
        (configurations.compile).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    } {
        exclude "META-INF/**"
        exclude "LICENSE"
    }
    manifest {
        attributes 'Implementation-Title': 'ENA FTP Downloader',
                'Implementation-Version': version,
                'Main-Class': 'uk.ac.ebi.ena.ftp.gui.Main',
                'Permissions': 'all-permissions',
                'Application-Name': 'ENA FTP Downloader'
    }
}


dependencies {
    compile group: 'commons-net', name: 'commons-net', version: '3.5'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
    compile 'commons-io:commons-io:2.4'
    compile name:'ftp4j', version: '1.7.2'
    compile name:'javafx-dialogs', version: '0.0.4'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.1'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task copyUnsignedFile(type: Copy, dependsOn: [clean, jar]) {
    from configurations.compile
    from("build/libs")
    into("build/unsigned")
    include('ena-ftp-downloader-*.jar')
}

task signAll(dependsOn: [copyUnsignedFile]) << {
    new File('build/signed').mkdirs()
    def libFiles = files { file('build/unsigned').listFiles() }
    libFiles.each {
        ant.signjar(
                storetype: 'pkcs12',
                destDir: 'build/signed',
                alias: '1', //'european molecular biology laboratory\'s godaddy.com, inc. id',
                jar: it,
                keystore: 'certificates/ENA-2016.P12',
                storepass: 'pass1234',
                verbose: 'true',
                tsaurl: 'http://tsa.starfieldtech.com/', //timestamp url for godaddy
                preservelastmodified: 'true')
    }
}

task copyReadme(type: Copy) {
    from("/")
    into("build/signed")
    include('README.md')
}

signAll.finalizedBy(copyReadme);
